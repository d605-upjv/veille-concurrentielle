// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeilleConcurrentielle.Aggregator.WebApp.Data;

#nullable disable

namespace VeilleConcurrentielle.Aggregator.WebApp.Migrations
{
    [DbContext(typeof(AggregatorDbContext))]
    partial class AggregatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("VeilleConcurrentielle.Aggregator.WebApp.Data.Entities.CompetitorEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Competitors");

                    b.HasData(
                        new
                        {
                            Id = "ShopA",
                            LogoUrl = "https://www.icone-png.com/png/43/43296.png",
                            Name = "Shop A"
                        },
                        new
                        {
                            Id = "ShopB",
                            LogoUrl = "https://www.icone-png.com/png/43/43302.png",
                            Name = "Shop A"
                        });
                });

            modelBuilder.Entity("VeilleConcurrentielle.Aggregator.WebApp.Data.Entities.StrategyEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Strategies");

                    b.HasData(
                        new
                        {
                            Id = "OverallAveragePrice",
                            Name = "Dans la moyenne"
                        },
                        new
                        {
                            Id = "OverallCheaperPrice",
                            Name = "Le moins cher"
                        },
                        new
                        {
                            Id = "FivePercentAboveMeanPrice",
                            Name = "5% plus cher que la moyenne"
                        });
                });

            modelBuilder.Entity("VeilleConcurrentielle.Infrastructure.Core.Data.Entities.ReceivedEventEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DispatchedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SerializedPayload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ReceivedEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
