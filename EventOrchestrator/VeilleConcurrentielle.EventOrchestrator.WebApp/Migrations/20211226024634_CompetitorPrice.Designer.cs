// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeilleConcurrentielle.EventOrchestrator.WebApp.Data;

#nullable disable

namespace VeilleConcurrentielle.EventOrchestrator.WebApp.Migrations
{
    [DbContext(typeof(EventDbContext))]
    [Migration("20211226024634_CompetitorPrice")]
    partial class CompetitorPrice
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("VeilleConcurrentielle.EventOrchestrator.WebApp.Data.Entities.EventConsumerEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Reason")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("EventConsumers");
                });

            modelBuilder.Entity("VeilleConcurrentielle.EventOrchestrator.WebApp.Data.Entities.EventEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsConsumed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SerializedPayload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Name");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("VeilleConcurrentielle.EventOrchestrator.WebApp.Data.Entities.EventSubscriberEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventName");

                    b.ToTable("EventSubscribers");

                    b.HasData(
                        new
                        {
                            Id = "7b68fa7b-0062-478e-ac70-111733f6cdee",
                            ApplicationName = "EventOrchestrator",
                            EventName = "Test"
                        },
                        new
                        {
                            Id = "2e778f3b-a580-43e2-b292-774d5a070d92",
                            ApplicationName = "ProductService",
                            EventName = "Test"
                        },
                        new
                        {
                            Id = "a7d97a94-7d70-4415-bbbf-2956d5879b2b",
                            ApplicationName = "Aggregator",
                            EventName = "Test"
                        },
                        new
                        {
                            Id = "212d189d-c176-4490-b7c8-edd0be4b3dff",
                            ApplicationName = "ProductService",
                            EventName = "AddOrUpdateProductRequested"
                        },
                        new
                        {
                            Id = "92e062c7-7372-43e2-957d-47c51e91bc16",
                            ApplicationName = "Aggregator",
                            EventName = "ProductAddedOrUpdated"
                        },
                        new
                        {
                            Id = "3c0e3b84-e3e6-4203-97c3-7f9159fd3bc0",
                            ApplicationName = "ProductService",
                            EventName = "PriceIdentified"
                        });
                });

            modelBuilder.Entity("VeilleConcurrentielle.Infrastructure.Core.Data.Entities.ReceivedEventEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DispatchedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SerializedPayload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ReceivedEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
